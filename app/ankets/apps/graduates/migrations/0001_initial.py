# Generated by Django 3.1 on 2020-10-12 15:46

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_number', models.IntegerField(verbose_name='номер вопроса')),
                ('question_name', models.TextField(null=True, verbose_name='вопрос')),
                ('question_clarification', models.TextField(null=True, verbose_name='пояснение к вопросу')),
                ('question_type', models.IntegerField(null=True, verbose_name='тип вопроса')),
                ('field_type', models.TextField(default='text', null=True, verbose_name='тип поля свободного ответа (текст/число)')),
                ('field_mask', models.TextField(null=True, verbose_name='маска ввода')),
                ('field_placeholder', models.TextField(null=True, verbose_name='подпись к полю')),
                ('field_required', models.IntegerField(null=True, verbose_name='обязательность заполнения (0-нет, 1-да)')),
            ],
            options={
                'verbose_name': 'Вопрос',
                'verbose_name_plural': 'Вопросы',
            },
        ),
        migrations.CreateModel(
            name='Questionblock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('block_number', models.IntegerField(verbose_name='номер блока')),
                ('block_name', models.TextField(null=True, verbose_name='название блока вопросов')),
                ('block_type', models.IntegerField(null=True, verbose_name='тип блока вопросов (обычные или таблица с возможностью добавления)')),
                ('essance_label', models.TextField(null=True, verbose_name='кого (что) добавляем')),
            ],
            options={
                'verbose_name': 'Блок вопросов',
                'verbose_name_plural': 'Блоки вопросов',
            },
        ),
        migrations.CreateModel(
            name='Raw',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('respid', models.CharField(max_length=100, verbose_name='уникальный код респондента')),
                ('datapost', models.TextField(null=True, verbose_name='исходник данных')),
                ('result_date', models.DateTimeField(verbose_name='дата заполнения')),
            ],
        ),
        migrations.CreateModel(
            name='Respondent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('respondent_type', models.IntegerField(verbose_name='тип респондента')),
                ('respondent_name', models.CharField(max_length=100, verbose_name='название типа респондента')),
            ],
            options={
                'verbose_name': 'Респондент',
                'verbose_name_plural': 'Респонденты',
            },
        ),
        migrations.CreateModel(
            name='Spravochnik',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('spravochnik_number', models.IntegerField(verbose_name='код справочника с ответами')),
                ('spravochnik_kod', models.IntegerField(verbose_name='код ответа')),
                ('spravochnik_name', models.CharField(max_length=255, null=True, verbose_name='наименование')),
            ],
            options={
                'verbose_name': 'Справочник',
                'verbose_name_plural': 'Справочники',
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('essence_id', models.IntegerField(default=0, null=True, verbose_name='номер выпускника/работодателя (для вопросов с возможностью добавления строк)')),
                ('result_result', models.IntegerField(null=True, verbose_name='ответ')),
                ('respondent_id', models.CharField(max_length=100, verbose_name='уникальный код респондента')),
                ('result_free', models.TextField(null=True, verbose_name='свободный ответ')),
                ('result_date', models.DateTimeField(verbose_name='дата заполнения')),
                ('block_number', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='graduates.questionblock')),
                ('question_number', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='graduates.question')),
                ('respondent_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='graduates.respondent')),
            ],
            options={
                'verbose_name': 'Результат',
                'verbose_name_plural': 'Результаты',
            },
        ),
        migrations.AddField(
            model_name='questionblock',
            name='respondent_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='graduates.respondent'),
        ),
        migrations.AddField(
            model_name='question',
            name='block_number',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='graduates.questionblock'),
        ),
        migrations.AddField(
            model_name='question',
            name='respondent_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='graduates.respondent'),
        ),
        migrations.CreateModel(
            name='Links',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('respondent_id', models.CharField(max_length=100, verbose_name='уникальный код респондента')),
                ('status', models.IntegerField(verbose_name='статус анкеты')),
                ('mail', models.CharField(max_length=100, null=True, verbose_name='адрес электронной почты респондента')),
                ('respondent_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='graduates.respondent')),
            ],
            options={
                'verbose_name': 'Ссылка',
                'verbose_name_plural': 'Ссылки',
            },
        ),
        migrations.AlterUniqueTogether(
            name='questionblock',
            unique_together={('block_number', 'respondent_type')},
        ),
        migrations.AlterUniqueTogether(
            name='question',
            unique_together={('respondent_type', 'block_number', 'question_number')},
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_number', models.IntegerField(verbose_name='номер ответа')),
                ('answer_name', models.TextField(null=True, verbose_name='ответ')),
                ('answer_type', models.IntegerField(null=True, verbose_name='тип ответа')),
                ('answer_spravochnik', models.IntegerField(null=True, verbose_name='код справочника с ответами')),
                ('block_number', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='graduates.questionblock')),
                ('question_number', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='graduates.question')),
                ('respondent_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='graduates.respondent')),
            ],
            options={
                'verbose_name': 'Ответ',
                'verbose_name_plural': 'Ответы',
                'unique_together': {('respondent_type', 'block_number', 'question_number', 'answer_number')},
            },
        ),
    ]
